# Create app and change dir
cd 'C:\Users\Awinn\Google Drive\Web Apps\groundwork'
rails new groundwork --database=postgresql
cd groundwork
createdb -U postgres groundwork_development
#add  username: postgres  to config/databse.yml

# Create Models
rails g model Project title:string type:string body:text charge_occurrence:text user:references
rails g model Post title:string body:text release:boolean project:references
rails g model Comment body:text project:references user:references
rails g model Subscription amount:decimal project:references user:references:reward_tier:references
rails g model RewardsTier level:integer title:string body:text min_amount:decimal project:references
rails g model Goals title:string body:text amount:decimal project:references

# Create Controllers and Views
rails g controller Projects show index create
rails g controller Pages landing

# Install Devise
#add  gem 'devise'  to Gemfile
bundle install
rails g devise:install
#add  config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }  to config/environments/development.rb
rails g devise User
rails g migration add_columns_to_user stripe_customer_nbr:text paypal_customer_nbr:text
rake db:migrate:up version=20170214001631 #create user table first
rake db:migrate

# Insert HTML and CSS from Webflow

# Fix links and images in HTML and CSS
#replace  'project-index.html'  with  '/projects/index'
#replace  'project-show.html'  with  '/projects/show'
#replace  'project-create.html'  with  '/projects/new'
#remove CSS links in all HTML files
#remove <script src="js/modernizr.js" type="text/javascript"></script>
#remove <script src="js/webflow.js" type="text/javascript"></script>

# Remove Turbolinks
#remove from Gemfile
#remove from application.js
#remove from application.html.erb

# Change CSS
#move all 'landing' classes to the top in site.css
#add  *= require webflow  to application.css
#add  *= require site

# Move modals and nav to seperate views
#cut div 'login-modal' to '/shared/_login_modal.html.erb' [only need to do once]
#cut div 'signup-modal' to '/shared/_signup_modal.html.erb' [only need to do once]
#cut div 'nav-bar' to '/shared/_nav.html.erb' [only need to do once]
#cut div 'landinv nav-bar' to '/shared/_nav_landing.html.erb' [only need to do once]
#put  <%= render '/shared/_partial.html.erb' %>  in each view


# Create Rails Forms: Sign in, Sign up, Create Project
rails g devise:views
#making a lot of changes to signup/in forms, should only need to do once
#copy modal html to devise views (for errors and redirect to pages)

# Protect Create Project page from non-users
#add 	before_action :authenticate_user!, only: [:new, :create]  to ProjectsController

# Make projects/new form fully working

# Create real Show view that uses model data

# Create Payment style Models
rails g model Account user:references

rails g model Balance account:references
rails g model StripeInfo account:references
rails g model BankInfo bank_num:string routing_num:string account:references

rails g model Release project:references
rails g migration add_columns_to_subscriptions type:string rewards_tier:references
rails g model TransactionQueue type:string amount:decimal project:references user:references rewards_tier:references release:references
rails g model PastTransaction type:string amount:decimal project:references status:string user:references rewards_tier:references release:references



[x] Create rewards_tier.title field from min_amount
[x] Add 'Groundwork' home link to top left nav
[x] Make Rewards partial show on all 3 tabs
[x] Add 'Goals' form to 'new' just like 'Rewards'
[x] Add form for creating posts for Project owner
[x] Add Posts view to Projects/show
[x] Add User.name and User.avatar (default image like Slack or Twitter)
[x] Add form for creating comments for users
[x] Add Comments view to Projects/show
[x] Initialize git
[x] Push to heroku
[x] Pay heroku
[x] Add wysiwyg box to Body form (Project body and Post form)
[x] Create footer partial
	This should be 'our' section on the Project page
	Sitemap | |    Contact/Social
	Vectors peeking up from bottom of screen
[x] Add image to new Project form (paperclip gem)
[x] Move database to Heroku, use that db on localhost
[x] Fix Trix gem on Heroku
[x] Add username field to User (currently using email in comments)
[x] Refreshing project#show page should stay on Comments/Posts tab
[x] Add AWS to paperclip
[x] Fill in dummy project data
[x] Recaptcha
[x] RewardsTiers form and Goals form is only able to add projects[rewards_tier_attributes][1], can't have multiple
[x] Fill in the TODOs
[x] When a User creates a Project, if StripeInfo.account_id is nil use Stripe::Account.create and store account_id, secret_key, shareable_key
[x] Are we using Stripe Platform Account.Yes
[x] Not Now: I need to create `Charges` Controller and Model to keep track of and issue charges
[x] I need to get a Stripe Platform Account and see how that works. Do my Project Owners have to have Stripe accounts?
[x] How do I determine the Stripe fee? It looks like I pass the amount I want the user to end up with instead of the amount I keep, can I pass in that I want to keep x amount?
# How do we move transactions from Queue to Past? Grouped or no? No, same as in Queue + status
# charge_transactions
	# If it's the first-fifth of the month, after the snapshots have finished
		# Group TransactionQueue table by User, sum(amount) as total_amount_owed
		# Separately, group TransactionQueue table by User-Project and get proportion of each Project's amount for the User
		# Next, if User.account.balance > 0 deduct upto total_amount_owed from balance
		# Charge remaining total_amount_owed to StripeInfo.customer_id
		# If charge is successful
			# Take the amount_charged - 5% and multiply it by User-Project.proportion
			# Round amounts and credit each Project.users.account.balance (Project Owner's account)
			# Copy all of User's TransactionQueue records to PastTransaction with 'successful' status
		# If charge is unsuccessful
			# Leave the User's records in TransactionQueue
	# If it's the fifth of the month (after the above code has finished for the 5th day this month)
		# # Copy all TransactionQueue records to PastTransaction with 'failed' status
[x] If user does not have Stripe info saved, force the credit card form, and then show Subscription form
	[x] Stripe form: remove Remember Me and add Zip Code
[x] Project owner sees an additional 'Create Release' button that creates a Release record, if ReleaseSub Project
	[x] Fix 'monthly' and 'episodic'
	[x] When a Release record is created, create a snapshot of ReleaseSubscription for Project and copy to ReleaseTransactionQueue
[x] End of month triggers a snapshot of MonthlySubscription copied to MonthlyTransactionQueue
	[x] For each User in Transaction Queue
		[x] Sum all total debts
		[x] If Account.balance > 0 then withdrawl up the total amount from Account.balance
		[x] For the remainder of debt create Stripe API call for amount
			[x] Credit balance for each Project Owner proportionally based on total after fees and out take
[x] Project Owners can refund Month/Release, or User for Month/Release
[x] Create Project Dashboard page for Project Owners
[x] Create Payment Structure
	[x] Write out User stories
	[x] Turn User stories into decision tree
	[x] List all Models and Attributes
	[x] Create the Models in rails
	[x] Create logic in rails
	[x] Add functionality to Support project with Stripe
	[x] Test Subscription Rake Tasks
		[x] Transfer all Projects to 2 Users with Stripe.stripe_id (user_id: 13, 11)
		[x] Run charge_transactions and subscription_snapshots
		[x] Fix errors as they come up
			[x] charge_transactions
				[x] Check Subscription, Stripe accounts, etc
			[x] subscription_snapshots
				[x] Check Subscription and Queue tables to verify contents
		[x] Check Stripe balances, transfers, etc.
		[x] Remove all Account.balance code?
	[x] Do we even need Account.balance since Project Owners have Managed Stripe accounts? I don't think so
	[x] Should we only Transfer the funds after day 5?
	[x] Choose country on Project creation page. Add it to User table on Sign Up
		[x] Add Country table
		[x] Seed country list
		[x] Add references to User
		[x] Add to singup form
[x] Add Stripe Account Balance to Dashboard


Goal: Launchable by end of the week
Tuesday:
[] Setup web analytics
[] Get url and setup Heroku ssl
[x] Setup Devise email integration
[] Create Lean Canvas

Wednesday:
[] Email 3 people about interview
[] Finish a dashboard page
[] Add Stripe withdrawl ability
[] Edit User(Account) page


[] Have a nice design created
	[] Create a list/screenshot of each page

[] Write copy for landing page
	[] Sections
		Banner Image & Title
		Benefits
		Sample Projects (See the final product and social proof)
		Specific Social Proof success
		High level Social Proof

[] Find a URL
[] Create titles for pages
[] SSL?

[] Talk to Matt about funding

[] Create tests for everything (only a priority once we have any traction at all?)
	[] Create more subscription data and verify all Stripe API stuff works as it should

[] Make section for Goals on Project page



[] PastTransaction should be STI, I hacked it using 'type_of'
[] Add flash messages into controller and applicaiton.html.erb
	[] Create css in webflow for flash div
[] Rewards Tier column should only be written once, instead of on each tab
[] Add functionality to 'Share' button
[] Create landing page for Project Owners similar to Twuffer, mission statement link in footer



[] Add Paypal integration

Manual changes done to css:
	.listing-profile: max-width: 100%;
	.button-block: margin-top: 1rem;
	added .nav-home-link
	removed .w-nav-link.w--current color: #0082f3;





Demog.io

[x] Make more mobile friendly
[] Can we make the site generate a Twitter image for links?
















.
